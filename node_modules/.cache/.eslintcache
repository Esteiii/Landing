[{"C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\index.js":"1","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\App.jsx":"2","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\navigation.jsx":"3","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\features.jsx":"4","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\header.jsx":"5","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\services.jsx":"6","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\about.jsx":"7","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\team.jsx":"8","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\contact.jsx":"9","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\Team.jsx":"10","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\ourServices.jsx":"11","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\counts.jsx":"12","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\heroCarousel.jsx":"13","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\footer.jsx":"14","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\cta.jsx":"15","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\commentFb.jsx":"16","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\custom\\simplera\\js\\simpleraJs.js":"17","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\context\\CartProvider.js":"18","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\portfolio.jsx":"19","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\attributesWithImage.jsx":"20","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\attributesFull.jsx":"21","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\CartShopping.jsx":"22","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\productDetails.jsx":"23","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\transferPay.jsx":"24","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\checkout.jsx":"25","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\imgWithMessage.jsx":"26","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\loading.jsx":"27","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\hook\\useCart.js":"28","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\custom\\axios\\js\\axios.js":"29","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\main.js":"30"},{"size":245,"mtime":1670965581657,"results":"31","hashOfConfig":"32"},{"size":8455,"mtime":1671478384239,"results":"33","hashOfConfig":"32"},{"size":1527,"mtime":1670965581586,"results":"34","hashOfConfig":"32"},{"size":903,"mtime":1670965581525,"results":"35","hashOfConfig":"32"},{"size":2764,"mtime":1671477970645,"results":"36","hashOfConfig":"32"},{"size":1590,"mtime":1667919005324,"results":"37","hashOfConfig":"32"},{"size":2846,"mtime":1670965581505,"results":"38","hashOfConfig":"32"},{"size":1701,"mtime":1667919005331,"results":"39","hashOfConfig":"32"},{"size":5783,"mtime":1667919005267,"results":"40","hashOfConfig":"32"},{"size":1361,"mtime":1666042222110,"results":"41","hashOfConfig":"32"},{"size":1179,"mtime":1671129445842,"results":"42","hashOfConfig":"32"},{"size":1149,"mtime":1670965581520,"results":"43","hashOfConfig":"32"},{"size":2049,"mtime":1670962036247,"results":"44","hashOfConfig":"32"},{"size":8406,"mtime":1671128601184,"results":"45","hashOfConfig":"32"},{"size":774,"mtime":1670965581523,"results":"46","hashOfConfig":"32"},{"size":164,"mtime":1666042222027,"results":"47","hashOfConfig":"32"},{"size":1024,"mtime":1670965581600,"results":"48","hashOfConfig":"32"},{"size":356,"mtime":1670965581595,"results":"49","hashOfConfig":"32"},{"size":27920,"mtime":1671045954798,"results":"50","hashOfConfig":"32"},{"size":4646,"mtime":1671050560020,"results":"51","hashOfConfig":"32"},{"size":1324,"mtime":1671050272974,"results":"52","hashOfConfig":"32"},{"size":7883,"mtime":1670965581491,"results":"53","hashOfConfig":"32"},{"size":5715,"mtime":1670965581592,"results":"54","hashOfConfig":"32"},{"size":6125,"mtime":1670965581594,"results":"55","hashOfConfig":"32"},{"size":13962,"mtime":1670965581516,"results":"56","hashOfConfig":"32"},{"size":1785,"mtime":1670965581584,"results":"57","hashOfConfig":"32"},{"size":227,"mtime":1670965581584,"results":"58","hashOfConfig":"32"},{"size":161,"mtime":1670965581657,"results":"59","hashOfConfig":"32"},{"size":234,"mtime":1670965581597,"results":"60","hashOfConfig":"32"},{"size":0,"mtime":1671478299743,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1bx7j7q",{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\index.js",[],["127","128"],"C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\App.jsx",["129"],"C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\navigation.jsx",[],"C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\features.jsx",[],"C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\header.jsx",[],"C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\services.jsx",[],"C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\about.jsx",[],"C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\team.jsx",[],"C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\contact.jsx",[],"C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\Team.jsx",[],"C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\ourServices.jsx",[],"C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\counts.jsx",[],"C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\heroCarousel.jsx",[],"C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\footer.jsx",[],"C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\cta.jsx",[],"C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\commentFb.jsx",[],"C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\custom\\simplera\\js\\simpleraJs.js",[],"C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\context\\CartProvider.js",[],"C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\portfolio.jsx",["130","131","132","133"],"import React, { useState, useEffect, useCallback } from \"react\";\r\n/*\r\nimport {\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n*/\r\nimport { useCart } from \"../hook/useCart\";\r\nimport useEmblaCarousel from \"embla-carousel-react\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\n\r\n//import EmblaCarousel from \"./carousel/js/EmblaCarousel\";\r\nimport Popup from \"reactjs-popup\";\r\nimport { Link } from \"react-router-dom\";\r\n//import \"../components/carousel/css/base.css\";\r\n//import \"../components/carousel/css/reset.css\";\r\n\r\nexport const Portfolio = (props) => {\r\n  const [viewportRef, embla] = useEmblaCarousel({ skipSnaps: false });\r\n  const [prevBtnEnabled, setPrevBtnEnabled] = useState(false);\r\n  const [nextBtnEnabled, setNextBtnEnabled] = useState(false);\r\n  const [selectedIndex, setSelectedIndex] = useState(0);\r\n  const [scrollSnaps, setScrollSnaps] = useState([]);\r\n  const scrollPrev = useCallback(() => embla && embla.scrollPrev(), [embla]);\r\n  const scrollNext = useCallback(() => embla && embla.scrollNext(), [embla]);\r\n  const scrollTo = useCallback(\r\n    (index) => embla && embla.scrollTo(index),\r\n    [embla]\r\n  );\r\n  const { cart, setCart } = useCart();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"*\");\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const currency = function (number) {\r\n    return new Intl.NumberFormat(\"de-DE\").format(number);\r\n  };\r\n\r\n  const handleFilter = (e) => {\r\n    if (e.target.value.toString() === \"0\") {\r\n      setFilter(\"*\");\r\n      setCurrentPage(0);\r\n    } else {\r\n      setFilter(category[e.target.value - 1].categoryId);\r\n      setCurrentPage(0);\r\n    }\r\n  };\r\n\r\n  const onSelect = useCallback(() => {\r\n    if (!embla) return;\r\n    setSelectedIndex(embla.selectedScrollSnap());\r\n    setPrevBtnEnabled(embla.canScrollPrev());\r\n    setNextBtnEnabled(embla.canScrollNext());\r\n  }, [embla, setSelectedIndex]);\r\n\r\n  const DotButton = ({ selected, onClick }) => (\r\n    <button\r\n      className={`embla__dot ${selected ? \"is-selected\" : \"\"}`}\r\n      type=\"button\"\r\n      onClick={onClick}\r\n    />\r\n  );\r\n\r\n  const PrevButton = ({ enabled, onClick }) => (\r\n    <button\r\n      className=\"embla__button embla__button--prev\"\r\n      onClick={onClick}\r\n      disabled={!enabled}\r\n    >\r\n      <svg className=\"embla__button__svg\" viewBox=\"137.718 -1.001 366.563 644\">\r\n        <path d=\"M428.36 12.5c16.67-16.67 43.76-16.67 60.42 0 16.67 16.67 16.67 43.76 0 60.42L241.7 320c148.25 148.24 230.61 230.6 247.08 247.08 16.67 16.66 16.67 43.75 0 60.42-16.67 16.66-43.76 16.67-60.42 0-27.72-27.71-249.45-249.37-277.16-277.08a42.308 42.308 0 0 1-12.48-30.34c0-11.1 4.1-22.05 12.48-30.42C206.63 234.23 400.64 40.21 428.36 12.5z\" />\r\n      </svg>\r\n    </button>\r\n  );\r\n\r\n  const NextButton = ({ enabled, onClick }) => (\r\n    <button\r\n      className=\"embla__button embla__button--next\"\r\n      onClick={onClick}\r\n      disabled={!enabled}\r\n    >\r\n      <svg className=\"embla__button__svg\" viewBox=\"0 0 238.003 238.003\">\r\n        <path d=\"M181.776 107.719L78.705 4.648c-6.198-6.198-16.273-6.198-22.47 0s-6.198 16.273 0 22.47l91.883 91.883-91.883 91.883c-6.198 6.198-6.198 16.273 0 22.47s16.273 6.198 22.47 0l103.071-103.039a15.741 15.741 0 0 0 4.64-11.283c0-4.13-1.526-8.199-4.64-11.313z\" />\r\n      </svg>\r\n    </button>\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!embla) return;\r\n    onSelect();\r\n    setScrollSnaps(embla.scrollSnapList());\r\n    embla.on(\"select\", onSelect);\r\n  }, [embla, setScrollSnaps, onSelect]);\r\n\r\n  const handleSubmit = (e, product) => {\r\n    e.preventDefault();\r\n    const productoSeleccionado = {\r\n      productId: product.id,\r\n      productName: product.title,\r\n      productImg: product.image[0],\r\n      productPrice: product.productPriceNew,\r\n      productQuantity: 1,\r\n    };\r\n\r\n    const existe = cart?.some(\r\n      (product) => product.productId === productoSeleccionado.productId\r\n    );\r\n\r\n    if (existe) {\r\n      const product = cart?.map((product) => {\r\n        if (product.productId === productoSeleccionado.productId) {\r\n          product.productQuantity += 1;\r\n          return product;\r\n        } else {\r\n          return product;\r\n        }\r\n      });\r\n\r\n      setCart([...product]);\r\n      localStorage.setItem(\"cart\", JSON.stringify(product ?? \"\"));\r\n    } else {\r\n      setCart([...(cart ?? []), productoSeleccionado]);\r\n      localStorage.setItem(\"cart\", JSON.stringify(cart ?? \"\"));\r\n    }\r\n  };\r\n\r\n  const onChangeInput = (event) => {\r\n    setSearch(event.target.value);\r\n    setCurrentPage(0);\r\n  };\r\n  //METODO DE FILTRADO\r\n  let results = [];\r\n\r\n  let products = require(`../data/${props.data.data.pathProducts}`);\r\n  let category = require(`../data/${props.data.data.pathCategories}`);\r\n  //Metodo de Paginado\r\n  const filteredProducts = () => {\r\n    if (search.length === 0 && filter === \"*\") {\r\n      results = products.slice(\r\n        currentPage,\r\n        currentPage + props.data.data.numberOfProductsShow\r\n      );\r\n      return results;\r\n    } else if (filter !== \"*\" && search.length === 0) {\r\n      results = products.filter((product) =>\r\n        product.category.toLowerCase().includes(filter.toLocaleLowerCase())\r\n      );\r\n      results = results.slice(\r\n        currentPage,\r\n        currentPage + props.data.data.numberOfProductsShow\r\n      );\r\n      return results;\r\n    } else if (search.length > 0 && filter !== \"*\") {\r\n      results = products.filter((product) =>\r\n        product.category.toLowerCase().includes(filter.toLocaleLowerCase())\r\n      );\r\n      results = results.filter(\r\n        (product) =>\r\n          product.title.toLowerCase().includes(search.toLocaleLowerCase()) ||\r\n          product.productDescription\r\n            .toLowerCase()\r\n            .includes(search.toLocaleLowerCase())\r\n      );\r\n      results = results.slice(\r\n        currentPage,\r\n        currentPage + props.data.data.numberOfProductsShow\r\n      );\r\n\r\n      return results;\r\n    } else {\r\n      results = products.filter(\r\n        (product) =>\r\n          product.title.toLowerCase().includes(search.toLocaleLowerCase()) ||\r\n          product.productDescription\r\n            .toLowerCase()\r\n            .includes(search.toLocaleLowerCase())\r\n      );\r\n      results = results.slice(\r\n        currentPage,\r\n        currentPage + props.data.data.numberOfProductsShow\r\n      );\r\n      return results;\r\n    }\r\n  };\r\n  const nextPage = () => {\r\n    if (\r\n      products.filter(\r\n        (product) =>\r\n          product.title.toLowerCase().includes(search.toLocaleLowerCase()) ||\r\n          product.productDescription\r\n            .toLowerCase()\r\n            .includes(search.toLocaleLowerCase())\r\n      ).length >\r\n      currentPage + 4\r\n    ) {\r\n      setCurrentPage(currentPage + 4);\r\n    }\r\n  };\r\n  const prevPage = () => {\r\n    if (currentPage > 0) {\r\n      setCurrentPage(currentPage - 4);\r\n    }\r\n  };\r\n\r\n  /* if(filter==='*'){\r\n    results= products;\r\n  }else{\r\n    results = products.filter( (product) => product.category.toLowerCase().includes(filter.toLocaleLowerCase()) )\r\n  }\r\n\r\n  if(search){\r\n    results = results.filter( (product) => product.title.toLowerCase().includes(search.toLocaleLowerCase()) || product.productDescription.toLowerCase().includes(search.toLocaleLowerCase()) )\r\n  } */\r\n\r\n  const [index, setIndex] = useState(1);\r\n\r\n  const handleSelect = (selectedIndex, e) => {\r\n    setIndex(selectedIndex);\r\n  };\r\n\r\n  const product = require(\"../data/products.json\");\r\n\r\n  return (\r\n    <section\r\n      id={props.data ? props.data.href.substring(1, props.data.href.len) : \"\"}\r\n      class=\"portfolio section-bg\"\r\n    >\r\n      <div class=\"container\" id=\"productos\" style={{ minHeight: \"300px\" }}>\r\n        {/* <div class=\"section-title\">\r\n          <h2>{props.data ? props.data.data.title : \"\"}</h2>\r\n          <p>{props.data ? props.data.data.paragraph : \"\"}</p>\r\n        </div>\r\n        <Carousel activeIndex={index} onSelect={handleSelect}>\r\n          {product.map((d, i) => (\r\n            <Carousel.Item>\r\n              <div class={`portfolio-item`}>\r\n                <div\r\n                  key={`${d.title}-${i}`}\r\n                  class={`portfolio-wrap`}\r\n                  style={{\r\n                    alignContent: \"center\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    className=\"product-img position-relative\"\r\n                    style={{ alignContent: \"center\", display: \"block\" }}\r\n                  >\r\n                    {d.featuredArticle ? (\r\n                      <div className=\"avatar-sm product-ribbon-featured\">\r\n                        <div className=\"avatar-title-featured rounded-circle\">\r\n                          <i className=\"bx bx-star icon-color-featured\" />\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      <div />\r\n                    )}\r\n                    {d.productPriceNew < d.productPrice &&\r\n                    d.productPriceNew > 0 ? (\r\n                      <div className=\"avatar-sm product-ribbon-offer\">\r\n                        <span className=\"avatar-title rounded-circle\">\r\n                          {` ${\r\n                            (d.productPriceNew * 100) / d.productPrice - 100\r\n                          }%`}\r\n                        </span>\r\n                      </div>\r\n                    ) : (\r\n                      <div />\r\n                    )}\r\n                    <div>\r\n                      <img\r\n                        class=\"portfolio-item-img\"\r\n                        width=\"300px\"\r\n                        height=\"300px\"\r\n                        alt={d.title}\r\n                        src={d.image[0]}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"portfolio-info\">\r\n                    <h4>{d.title}</h4>\r\n                    <p\r\n                      dangerouslySetInnerHTML={{ __html: d.productDescription }}\r\n                    />\r\n                  </div>\r\n                  <div class=\"portfolio-links\">\r\n                    <Popup\r\n                      trigger={\r\n                        <Link\r\n                          to={`/productDetails?productID=${d.id}`}\r\n                          class=\"bx bx-info-circle\"\r\n                          style={{ cursor: \"pointer\" }}\r\n                        ></Link>\r\n                      }\r\n                      modal\r\n                    >\r\n                      {(close) => (\r\n                        <div class=\"card\" style={{ background: \"#eee\" }}>\r\n                          <div>\r\n                            <p></p>\r\n                          </div>\r\n                          <div>\r\n                            <p></p>\r\n                          </div>\r\n                          <div className=\"embla\">\r\n                            <div className=\"embla__viewport\" ref={viewportRef}>\r\n                              <div className=\"embla__container\">\r\n                                {d.image.map((image, index) => (\r\n                                  <div className=\"embla__slide\" key={index}>\r\n                                    <div className=\"embla__slide__inner\">\r\n                                      <img\r\n                                        className=\"embla__slide__img\"\r\n                                        src={image}\r\n                                        alt={d.title}\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                ))}\r\n                              </div>\r\n                            </div>\r\n                            {/*<PrevButton\r\n                              onClick={scrollPrev}\r\n                              enabled={prevBtnEnabled}\r\n                            />\r\n                            <NextButton\r\n                              onClick={scrollNext}\r\n                              enabled={nextBtnEnabled}\r\n                                />\r\n                          </div>\r\n                          <div className=\"embla__dots\">\r\n                            {scrollSnaps.map((_, index) => (\r\n                              <DotButton\r\n                                key={index}\r\n                                selected={index === selectedIndex}\r\n                                onClick={() => scrollTo(index)}\r\n                              />\r\n                            ))}\r\n                          </div>\r\n\r\n                          <div className=\"text-container-popup\">\r\n                            <h3>{d.title}</h3>\r\n                            <h5>\r\n                              {d.productPriceNew > 0 &&\r\n                              d.productPriceNew < d.productPrice ? (\r\n                                <div>\r\n                                  <span className=\"text-muted me-2\">\r\n                                    <del>${currency(d.productPrice)}</del>\r\n                                  </span>\r\n                                  <b class=\"price\">\r\n                                    ${currency(d.productPriceNew)}\r\n                                  </b>\r\n                                </div>\r\n                              ) : (\r\n                                <div>\r\n                                  <b class=\"price\">\r\n                                    ${currency(d.productPrice)}\r\n                                  </b>\r\n                                </div>\r\n                              )}\r\n                            </h5>\r\n                            <p\r\n                              style={{ fontSize: \"14px\" }}\r\n                              dangerouslySetInnerHTML={{\r\n                                __html: d.productDescription,\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div\r\n                              class=\"col-lg-1\"\r\n                              style={{ paddingRight: \"0\" }}\r\n                            ></div>\r\n                            <div class=\"col-lg-4\" style={{ paddingRight: \"0\" }}>\r\n                              <button\r\n                                onClick={() => close()}\r\n                                className=\"portfolio-return-button\"\r\n                                style={{\r\n                                  width: \"100%\",\r\n                                  border: \"none\",\r\n                                  height: \"30px\",\r\n                                }}\r\n                              >\r\n                                <i className=\"bx bx-arrow-back\" /> {\"Volver\"}\r\n                              </button>\r\n                            </div>\r\n                            <div\r\n                              class=\"col-lg-2\"\r\n                              style={{ paddingRight: \"0\" }}\r\n                            ></div>\r\n                            <div\r\n                              class=\"col-lg-4\"\r\n                              style={{\r\n                                paddingLeft: \"0\",\r\n                              }}\r\n                            >\r\n                              <button\r\n                                class=\"portfolio-add-button\"\r\n                                style={{\r\n                                  width: \"100%\",\r\n                                  border: \"none\",\r\n                                  height: \"30px\",\r\n                                }}\r\n                                onClick={(e) => {\r\n                                  handleSubmit(e, d);\r\n                                  close();\r\n                                }}\r\n                              >\r\n                                <i className=\"bx bx-cart\"></i>{\" \"}\r\n                                {props.data.data.addToCartButtonText}\r\n                              </button>\r\n                            </div>\r\n                            <div\r\n                              class=\"col-lg-1\"\r\n                              style={{ paddingRight: \"0\" }}\r\n                            ></div>\r\n                          </div>\r\n                          <div>\r\n                            <p></p>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </Popup>\r\n                    \r\n                    <a href=\"portfolio-details.html\" title=\"More Details\">\r\n                      <i class=\"bx bx-link\"></i>\r\n                    </a>\r\n                    \r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Carousel.Item>\r\n          ))}\r\n                  </Carousel>*/}\r\n\r\n        <div class=\"section-title\">\r\n          <h2>{props.data ? props.data.data.title : \"\"}</h2>\r\n          <p>{props.data ? props.data.data.paragraph : \"\"}</p>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-12 grid-filter justify-content-center\">\r\n            <ul id=\"portfolio-flters\">\r\n              <li\r\n                class=\"filter-active\"\r\n                onClick={(e) => handleFilter(e)}\r\n                value=\"0\"\r\n              >\r\n                TODOS\r\n              </li>\r\n              {category\r\n                ? category.map((d, i) => (\r\n                    <li onClick={(e) => handleFilter(e)} value={i + 1}>\r\n                      {d.categoryName}\r\n                    </li>\r\n                  ))\r\n                : \"Loading...\"}\r\n            </ul>\r\n            <div class=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                value={search}\r\n                onChange={onChangeInput}\r\n                placeholder=\"Nombre Producto\"\r\n                style={{ marginTop: \"3px\" }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"portfolio-container\">\r\n          <div\r\n            class=\"row\"\r\n            style={{\r\n              alignContent: \"center\",\r\n              /* display: \"block\" */ paddingLeft: \"70px\",\r\n            }}\r\n          >\r\n            {filteredProducts()?.map((d, i) => (\r\n              <div class={`portfolio-item`}>\r\n                <div\r\n                  key={`${d.title}-${i}`}\r\n                  class={`portfolio-wrap`}\r\n                  style={{ alignContent: \"center\", display: \"block\" }}\r\n                >\r\n                  <div\r\n                    className=\"product-img position-relative\"\r\n                    style={{ alignContent: \"center\", display: \"block\" }}\r\n                  >\r\n                    {d.featuredArticle ? (\r\n                      <div className=\"avatar-sm product-ribbon-featured\">\r\n                        <div className=\"avatar-title-featured rounded-circle\">\r\n                          <i className=\"bx bx-star icon-color-featured\" />\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      <div />\r\n                    )}\r\n                    {d.productPriceNew < d.productPrice &&\r\n                    d.productPriceNew > 0 ? (\r\n                      <div className=\"avatar-sm product-ribbon-offer\">\r\n                        <span className=\"avatar-title rounded-circle\">\r\n                          {` ${\r\n                            (d.productPriceNew * 100) / d.productPrice - 100\r\n                          }%`}\r\n                        </span>\r\n                      </div>\r\n                    ) : (\r\n                      <div />\r\n                    )}\r\n                    <div>\r\n                      <img\r\n                        class=\"portfolio-item-img\"\r\n                        width=\"300px\"\r\n                        height=\"300px\"\r\n                        alt={d.title}\r\n                        src={d.image[0]}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"portfolio-info\">\r\n                    <h4>{d.title}</h4>\r\n                    <p\r\n                      dangerouslySetInnerHTML={{ __html: d.productDescription }}\r\n                    />\r\n                  </div>\r\n                  <div class=\"portfolio-links\">\r\n                    <Popup\r\n                      trigger={\r\n                        <Link\r\n                          to={`/productDetails?productID=${d.id}`}\r\n                          class=\"bx bx-info-circle\"\r\n                          style={{ cursor: \"pointer\" }}\r\n                        ></Link>\r\n                      }\r\n                      modal\r\n                    >\r\n                      {(close) => (\r\n                        <div class=\"card\" style={{ background: \"#eee\" }}>\r\n                          <div>\r\n                            <p></p>\r\n                          </div>\r\n                          <div>\r\n                            <p></p>\r\n                          </div>\r\n                          <div className=\"embla\">\r\n                            <div className=\"embla__viewport\" ref={viewportRef}>\r\n                              <div className=\"embla__container\">\r\n                                {d.image.map((image, index) => (\r\n                                  <div className=\"embla__slide\" key={index}>\r\n                                    <div className=\"embla__slide__inner\">\r\n                                      <img\r\n                                        className=\"embla__slide__img\"\r\n                                        src={image}\r\n                                        alt={d.title}\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                ))}\r\n                              </div>\r\n                            </div>\r\n                            <PrevButton\r\n                              onClick={scrollPrev}\r\n                              enabled={prevBtnEnabled}\r\n                            />\r\n                            <NextButton\r\n                              onClick={scrollNext}\r\n                              enabled={nextBtnEnabled}\r\n                            />\r\n                          </div>\r\n                          <div className=\"embla__dots\">\r\n                            {scrollSnaps.map((_, index) => (\r\n                              <DotButton\r\n                                key={index}\r\n                                selected={index === selectedIndex}\r\n                                onClick={() => scrollTo(index)}\r\n                              />\r\n                            ))}\r\n                          </div>\r\n\r\n                          <div className=\"text-container-popup\">\r\n                            <h3>{d.title}</h3>\r\n                            <h5>\r\n                              {d.productPriceNew > 0 &&\r\n                              d.productPriceNew < d.productPrice ? (\r\n                                <div>\r\n                                  <span className=\"text-muted me-2\">\r\n                                    <del>${currency(d.productPrice)}</del>\r\n                                  </span>\r\n                                  <b class=\"price\">\r\n                                    ${currency(d.productPriceNew)}\r\n                                  </b>\r\n                                </div>\r\n                              ) : (\r\n                                <div>\r\n                                  <b class=\"price\">\r\n                                    ${currency(d.productPrice)}\r\n                                  </b>\r\n                                </div>\r\n                              )}\r\n                            </h5>\r\n                            <p\r\n                              style={{ fontSize: \"14px\" }}\r\n                              dangerouslySetInnerHTML={{\r\n                                __html: d.productDescription,\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div\r\n                              class=\"col-lg-1\"\r\n                              style={{ paddingRight: \"0\" }}\r\n                            ></div>\r\n                            <div class=\"col-lg-4\" style={{ paddingRight: \"0\" }}>\r\n                              <button\r\n                                onClick={() => close()}\r\n                                className=\"portfolio-return-button\"\r\n                                style={{\r\n                                  width: \"100%\",\r\n                                  border: \"none\",\r\n                                  height: \"30px\",\r\n                                }}\r\n                              >\r\n                                <i className=\"bx bx-arrow-back\" /> {\"Volver\"}\r\n                              </button>\r\n                            </div>\r\n                            <div\r\n                              class=\"col-lg-2\"\r\n                              style={{ paddingRight: \"0\" }}\r\n                            ></div>\r\n                            <div\r\n                              class=\"col-lg-4\"\r\n                              style={{\r\n                                paddingLeft: \"0\",\r\n                              }}\r\n                            >\r\n                              <button\r\n                                class=\"portfolio-add-button\"\r\n                                style={{\r\n                                  width: \"100%\",\r\n                                  border: \"none\",\r\n                                  height: \"30px\",\r\n                                }}\r\n                                onClick={(e) => {\r\n                                  handleSubmit(e, d);\r\n                                  close();\r\n                                }}\r\n                              >\r\n                                <i className=\"bx bx-cart\"></i>{\" \"}\r\n                                {props.data.data.addToCartButtonText}\r\n                              </button>\r\n                            </div>\r\n                            <div\r\n                              class=\"col-lg-1\"\r\n                              style={{ paddingRight: \"0\" }}\r\n                            ></div>\r\n                          </div>\r\n                          <div>\r\n                            <p></p>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </Popup>\r\n                    {/*\r\n                    <a href=\"portfolio-details.html\" title=\"More Details\">\r\n                      <i class=\"bx bx-link\"></i>\r\n                    </a>\r\n                    */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          {/* div container button */}\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-1\" style={{ paddingRight: \"0\" }}></div>\r\n          <div class=\"col-lg-4\" style={{ paddingRight: \"0\" }}>\r\n            <button\r\n              onClick={prevPage}\r\n              className=\"portfolio-return-button\"\r\n              style={{\r\n                width: \"100%\",\r\n                border: \"none\",\r\n                height: \"30px\",\r\n              }}\r\n            >\r\n              <i className=\"bx bx-arrow-back\" /> {\"Volver\"}\r\n            </button>\r\n          </div>\r\n          <div class=\"col-lg-2\" style={{ paddingRight: \"0\" }}></div>\r\n          <div\r\n            class=\"col-lg-4\"\r\n            style={{\r\n              paddingLeft: \"0\",\r\n            }}\r\n          >\r\n            <button\r\n              class=\"portfolio-add-button\"\r\n              style={{\r\n                width: \"100%\",\r\n                border: \"none\",\r\n                height: \"30px\",\r\n              }}\r\n              onClick={nextPage}\r\n            >\r\n              {\"Siguiente\"} <i class=\"bx bx-right-arrow-alt\"></i>\r\n            </button>\r\n          </div>\r\n          <div class=\"col-lg-1\" style={{ paddingRight: \"0\" }}></div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\attributesWithImage.jsx",[],"C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\attributesFull.jsx",[],"C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\CartShopping.jsx",["134"],"import React, { useEffect } from \"react\";\r\nimport {useCart} from \"../hook/useCart\";\r\n\r\n\r\n\r\nexport const CartShopping = (props) => {\r\n  \r\n  let cartLocalStorage = \"\";\r\n  let cartReaded = localStorage?.getItem('cart');\r\n  if (cartReaded !== undefined && cartReaded !== \"undefined\") {\r\n    cartLocalStorage = JSON.parse(cartReaded)\r\n  }\r\n\r\n  const { cart, setCart } = useCart();\r\n  const currency = function(number){\r\n    return new Intl.NumberFormat('de-DE').format(number);\r\n  };\r\n  //meta title\r\n  useEffect(() => {\r\n    if(cart?.length===0 && cartLocalStorage?.length>0){\r\n      setCart(cartLocalStorage);\r\n    }\r\n  }, [useCart])\r\n  \r\n  useEffect(() => {\r\n    localStorage.setItem('cart',JSON.stringify(cart ?? \"\"))\r\n  });\r\n  \r\n\r\n  function removeCartItem(id) {\r\n    var filtered = cart?.filter(function (item) {\r\n      return item.productId !== id;\r\n    });\r\n\r\n    setCart(filtered);\r\n    \r\n   \r\n  }\r\n\r\n  function countUP(id, prev_data_attr) {\r\n    setCart(\r\n      cart?.map((p) =>\r\n        p.productId === id ? { ...p, productQuantity: prev_data_attr + 1  } : p\r\n      )\r\n    );\r\n  }\r\n\r\n  function countDown(id, prev_data_attr) {\r\n    setCart(\r\n      cart?.map((p) =>\r\n        p.productId === id ? { ...p, productQuantity: prev_data_attr - 1 } : p\r\n      )\r\n    );\r\n  }\r\n  const handleCartSubmit = (cart) =>{\r\n    localStorage.setItem('cart',JSON.stringify(cart ?? \"\"))\r\n  }\r\n\r\n  //   const grandTotal = (productList.map (product =>(\r\n\r\n  //     product.productPrice*product.cartQuantity\r\n\r\n  //   )));\r\n\r\n  //   const precioTotal = grandTotal.reduce((a,b)=>a+b,0);\r\n  //   const discount = (productList.map (product =>(\r\n  //     product.productPrice*product.cartQuantity-product.productPriceDiscount*product.cartQuantity\r\n  //   )))\r\n  //   const discountTotal = discount.reduce((a,b)=>a+b,0);\r\n\r\n  return (\r\n    <div>\r\n      <section id={props.data ? props.data.href.substring(1, props.data.href.len) : ''}>\r\n          <div class=\"section-title\">\r\n            <h2>{props.data ? props.data.data.title : \"\"}</h2>\r\n          </div>\r\n          <React.Fragment>\r\n            <div class=\"page-content\">\r\n              <div class=\"container\" fluid>\r\n                \r\n                  <div class=\"table-responsive\">\r\n                    <table class=\"table align-middle mb-0 table-nowrap\">\r\n                      <thead class=\"table-light\">\r\n                        <tr>\r\n                          <th style={{width: '50%', minWidth: '300px'}}> {props.data.data.headerTableProduct} </th>\r\n                          <th style={{width: '10%', minWidth: '100px', textAlign: 'right'}}>{props.data.data.headerTableProductPrice}</th>\r\n                          <th style={{width: '20%', minWidth: '150px', textAlign: 'right'}}>{props.data.data.headerTableProductQuantity}</th>\r\n                          <th style={{width: '20%', minWidth: '200px', textAlign: 'right'}}>{props.data.data.totalPay}</th>\r\n                          <th></th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {cart?.map((product) => (\r\n                          <tr key={product.productId}>\r\n                            <td>\r\n                              <div style={{whiteSpace: 'nowrap', overflowX: 'auto'}}>\r\n                                <div style={{display: 'inline-block'}}>\r\n                                  <img\r\n                                      src={product.productImg}\r\n                                      alt={product.productName}\r\n                                      title={product.productName}\r\n                                      class=\"avatar-md\"\r\n                                  />\r\n                                </div>\r\n                                <div style={{display: 'inline-block'}}>\r\n                                  <h6 class=\"font-size-12 text-truncate\">\r\n                                  &nbsp;&nbsp;&nbsp;\r\n                                  </h6>\r\n                                </div>\r\n                                <div style={{display: 'inline-block'}}>\r\n                                  <h6 class=\"text-truncate\">\r\n                                    {product.productName}\r\n                                  </h6>\r\n                                </div>\r\n                              </div>\r\n                            </td>\r\n                            <td style={{textAlign: 'right'}}>$ {currency(product.productPrice)}</td>\r\n                            <td style={{textAlign: 'right'}}>\r\n                              <div style={{whiteSpace: 'nowrap', overflowX: 'auto'}}>\r\n                                <div class=\"portfolio-cart-button\" style={{display: 'inline-block'}}>\r\n                                  <button type=\"button\" class=\"btn\" onClick={() => {\r\n                                      countDown(\r\n                                        product.productId,\r\n                                        product.productQuantity\r\n                                      );\r\n                                      // handleDeleteProductUpdate(product);\r\n                                    }}> - \r\n                                  </button>\r\n                                </div>\r\n                                <div style={{display: 'inline-block', minWidth: '50px', textAlign: 'center'}}>\r\n                                  <h6 class=\"text-truncate\" style={{padding: '0px 0', overflow: \"unset\"}}>\r\n                                    {product.productQuantity >= 1\r\n                                        ? product.productQuantity\r\n                                        : removeCartItem(product.productId)}\r\n                                  </h6>\r\n                                </div>\r\n                                <div class=\"portfolio-cart-button\" style={{display: 'inline-block'}}>\r\n                                  <button type=\"button\" class=\"btn\" onClick={() => {\r\n                                      countUP(\r\n                                        product.productId,\r\n                                        product.productQuantity\r\n                                      );\r\n                                      // handleAddProductUpdate(product);\r\n                                    }}> +\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n\r\n                            </td>\r\n                            <td style={{textAlign: 'right'}}>\r\n                              ${\" \"}\r\n                              {product.productQuantity >= 0\r\n                                ? currency(product.productQuantity * product.productPrice): 0\r\n                              }\r\n                            </td>\r\n                            <td style={{textAlign: 'right'}}>\r\n                              <button class ='buttonTrash' onClick={() => {\r\n                                  removeCartItem(product.productId);\r\n                                }}>\r\n                                <i class=\"bx bx-trash buttonIconTrash\" id=\"img-carrito\"></i>\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                  \r\n                  <div style={{alignContent: 'revert'}}>\r\n                    <div class=\"text-sm-end mt-2 mt-sm-0\">\r\n                      <a href=\"/checkout\" class=\"cart-btn\" onClick={ ()=> handleCartSubmit(cart) }>\r\n                        <i class=\"mdi mdi-cart-arrow-right me-1\"/>{\" \"}\r\n                        {props.data.data.buttonReview}{\" \"}\r\n                      </a>\r\n                    </div>\r\n                      \r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </React.Fragment>\r\n        </section>\r\n      \r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\productDetails.jsx",["135","136","137","138","139"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport InnerImageZoom from 'react-inner-image-zoom'\r\nimport Swal from \"sweetalert2\";\r\n\r\n//Components\r\nimport { Header } from \"./header\";\r\nimport { Footer } from \"./footer\";\r\n\r\n//Hooks\r\nimport { useCart } from \"../hook/useCart\";\r\n\r\n//Data\r\nimport products from \"../data/products.json\";\r\nimport data from \"../data/data.json\";\r\n//CSS\r\nimport 'react-inner-image-zoom/lib/InnerImageZoom/styles.css'\r\n\r\nexport const ProductDetails = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { cart, setCart } = useCart();\r\n  const idParams = location.search.slice(\r\n    location.search.lastIndexOf(\"=\") + 1,\r\n    location.search.length\r\n  );\r\n  const [product, setProduct] = useState();\r\n  const currency = function (number) {\r\n    return new Intl.NumberFormat(\"de-DE\").format(number);\r\n  };\r\n\r\n  useEffect(() => {\r\n    products.filter((product) => {\r\n      if (product.id == idParams) {\r\n        setProduct(product);\r\n      }\r\n    });\r\n  }, []);\r\n \r\n\r\n  const handleSubmit = (e, product) => {\r\n    e.preventDefault();\r\n    const productoSeleccionado = {\r\n      productId: product.id,\r\n      productName: product.title,\r\n      productImg: product.image[0],\r\n      productPrice: product.productPriceNew,\r\n      productQuantity: 1,\r\n    };\r\n    \r\n    const existe = cart?.some(\r\n      (product) => product.productId === productoSeleccionado.productId\r\n    );\r\n\r\n    if (existe) {\r\n      const product = cart?.map((product) => {\r\n        if (product.productId === productoSeleccionado.productId) {\r\n          product.productQuantity += 1;\r\n          return product;\r\n        } else {\r\n          return product;\r\n        }\r\n      });\r\n\r\n      setCart([...product]);\r\n      localStorage.setItem(\"cart\", JSON.stringify(product ?? \"\"));\r\n    } else {\r\n      setCart([...(cart ?? []), productoSeleccionado]);\r\n      localStorage.setItem(\"cart\", JSON.stringify(cart ?? \"\"));\r\n    }\r\n    Swal.fire(\r\n      \"Producto Agregado\",\r\n      `${productoSeleccionado.productName} ha sido agregado al carrito exitozamente `,\r\n      \"success\"\r\n    ) \r\n  };\r\n  useEffect(() => {\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n  \r\n  }, [handleSubmit])\r\n  \r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Header data={data.pages.filter((e) => e.pageName === \"Header\")[0]} />\r\n      <div style={{ background: \"#eeeeee\", padding: \"10px\" }}>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"titleContainer\">\r\n                <Link className=\"dt-volver-link\" to='/#products'  > <i class=\"bx bx-arrow-back\"></i> Volver a los Productos</Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <div className=\"card\" style={{ border: \"none\" }}>\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-xl-6\">\r\n                      {product?.image.map((image, key) => (\r\n                    \r\n                         <InnerImageZoom src={image} alt={product?.title} key={key}/>\r\n                           \r\n                        \r\n                      ))}\r\n                    </div>\r\n                    <div className=\"col-xl-6\">\r\n                      <div className=\"mt-4 mt-xl-3\">\r\n                        <h3>{product?.title}</h3>\r\n                        <h5>\r\n                          {product?.productPriceNew > 0 &&\r\n                          product?.productPriceNew < product?.productPrice ? (\r\n                            <div>\r\n                              <span className=\"text-muted me-2\">\r\n                                <del>${currency(product?.productPrice)}</del>\r\n                              </span>\r\n                              <b class=\"price\">\r\n                                ${currency(product?.productPriceNew)}\r\n                              </b>\r\n                            </div>\r\n                          ) : (\r\n                            <div>\r\n                              <b class=\"price\">\r\n                                ${currency(product?.productPrice)}\r\n                              </b>\r\n                            </div>\r\n                          )}\r\n                        </h5>\r\n                        <p\r\n                          style={{ fontSize: \"14px\" }}\r\n                          dangerouslySetInnerHTML={{\r\n                            __html: product?.productDescription,\r\n                          }}\r\n                        />\r\n                        <button\r\n                                class=\"portfolio-add-button\"\r\n                                style={{\r\n                                  width: \"100%\",\r\n                                  border: \"none\",\r\n                                  height: \"30px\",\r\n                                }}\r\n                                onClick={(e) => {\r\n                                  handleSubmit(e, product);\r\n                                  console.log(product)\r\n                                }}\r\n                              >\r\n                                <i className=\"bx bx-cart\"></i>{\" \"}\r\n                                {\"Agregar al Carrito\"}\r\n                              </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer data={data.pages.filter((e) => e.pageName === \"Footer\")[0]} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\transferPay.jsx",[],"C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\checkout.jsx",["140"],"import React, {useState,useEffect} from 'react';\r\nimport {\r\n  Link, useNavigate\r\n} from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"../custom/axios/js/axios\";\r\nimport {useCart} from \"../hook/useCart\";\r\nimport {Header} from './header';\r\nimport {Footer} from './footer';\r\nimport data from '../data/data.json';\r\nimport regiones from '../data/regiones.json';\r\nimport { Loading } from './loading';\r\n\r\n\r\nexport const Checkout =() => {\r\n  const cartLocalStorage = JSON.parse(localStorage.getItem('cart'))\r\n  const checkoutJson= require(\"../data/checkout.json\");\r\n  const { cart,setCart  } = useCart();\r\n  const navigate = useNavigate();\r\n  const [cartMap/*, setCartMap*/] = useState(cart.length>0? cart:cartLocalStorage);\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [commentary, setCommentary] = useState('');\r\n  const [regionUser, setRegionUser] = useState('');\r\n  const [comunaUser, setComunaUser] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  // Datos para crear una cuenta\r\n  // const [createAccount, setCreateAccount] = useState('no');\r\n  // const [password, setPassword] = useState('');\r\n  const [paymentMethod, setpaymentMethod] = useState('');\r\n  const [buttonName, setButtonName] = useState('');\r\n  //Loading\r\n  const [ isLoading, setIsLoading ] = useState();\r\n  const currency = function(number){\r\n    return new Intl.NumberFormat('de-DE').format(number);\r\n  };\r\n\r\n  useEffect(() => {\r\n    for (const product of cartMap) {\r\n      productAmmount(product.productId)\r\n    }\r\n    /*\r\n    cartMap.map( ( product) =>{\r\n      productAmmount(product.productId)\r\n    } )\r\n    */\r\n  }, [useCart])\r\n  \r\n\r\n  const grandTotal = (cart?.map (product =>(\r\n\r\n     product.productPrice*product.productQuantity\r\n\r\n  )));\r\n  function productAmmount (id) {\r\n    setCart(\r\n      cartMap?.map ((product) =>\r\n       product.productId === id ? {...product, productAmount: product.productPrice*product.productQuantity} : product \r\n      )\r\n    )\r\n  }\r\n \r\n  const precioTotal = grandTotal.reduce((a,b)=>a+b,0);\r\n  // const discount = (productList.map (product =>(\r\n  //   product.productPrice*product.cartQuantity-product.productPriceDiscount*product.cartQuantity\r\n  // ))) \r\n  // const discountTotal = discount.reduce((a,b)=>a+b,0);\r\n  const onChangeFirstName = (event) => {\r\n    setFirstName(event.target.value);\r\n  };\r\n  const onChangeLastName = (event) => {\r\n    setLastName(event.target.value);\r\n  };\r\n  const onChangeEmail = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n  const onChangeAddress = (event) => {\r\n    setAddress(event.target.value);\r\n  };\r\n  const onChangeCommentary = (event) => {\r\n    setCommentary(event.target.value);\r\n  };\r\n  const onChangeRegion = (event) => {\r\n    setRegionUser(event.target.value);\r\n  };\r\n  const onChangeComunaUser = (event) => {\r\n    setComunaUser(event.target.value);\r\n  };\r\n  const onChangePhone = (event) => {\r\n    setPhone(event.target.value);\r\n  };\r\n  // onChange para las variables que crean cuenta\r\n  // const onChangeCrearCuenta = (event) => {\r\n    \r\n  //   setCreateAccount(event.target.value);\r\n  //   console.log (createAccount)\r\n  // };\r\n  \r\n  // const onChangePassword = (event) => {\r\n  //   setPassword(event.target.value);\r\n  // };\r\n  const onChangePayMethod = (event) => {\r\n    setpaymentMethod(event.target.value);\r\n    let myPayment = checkoutJson.data.arrayPayment.filter(e=>e.id === event.target.value);\r\n    \r\n    if (myPayment.length === 1) {\r\n      setButtonName(myPayment[0].buttonName);\r\n    }\r\n  };\r\n\r\n  \r\n  const handlePago = (e) =>{\r\n    \r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    const body = {\r\n      customerName:`${firstName} ${lastName}`,\r\n      customerPhone:phone,\r\n      customerEmail:email,\r\n      customerAddress:address,\r\n      cartPaymentMethod:paymentMethod,\r\n      //commentary:commentary,\r\n      customerState:regionUser,\r\n      customerCity:comunaUser,\r\n      cartAmount:precioTotal,\r\n      products: cart,\r\n    }\r\n   \r\n    \r\n    axios.post('/cart/v1/',body).then((response)=> {\r\n      setIsLoading(false);\r\n      let myPayment = checkoutJson.data.arrayPayment.filter(e=>e.id === paymentMethod);\r\n      navigate(myPayment[0].route);\r\n      Swal.fire(\r\n        \"Orden Generada\",\r\n        `Su orden se ha generado correctamente sera transferido(a) a su resumen de compra `,\r\n        \"success\"\r\n      )     \r\n    }\r\n    ).catch((e)=>Swal.fire(\r\n      \"Intento Fallido\",\r\n      `Notificar al Vendedor: ${e}`,\r\n      \"error\"\r\n    ) );\r\n    \r\n  };\r\n\r\n  var comunaSelecion= regiones.regiones.filter(e=> e.region === regionUser).map((region) => {\r\n    return region.comunas \r\n  });\r\n  /*\r\n  var comunaSelecion= regiones.regiones.map((region) => {\r\n    if (regionUser === region.region){\r\n       return region.comunas \r\n    }\r\n  });\r\n  */\r\n  comunaSelecion = comunaSelecion.filter((comuna)=>{\r\n    return comuna!== undefined\r\n  })\r\n  \r\n    \r\n  return (\r\n    \r\n\r\n    <div className=\"checkout\">\r\n        <Header data={data.pages.filter(e => e.pageName === \"Header\")[0]}/>\r\n        <div class=\"container\">\r\n          <div class=\"py-5 text-center\">\r\n            \r\n            <h2>{checkoutJson.data.pageName}</h2>\r\n            <p class=\"lead\">{checkoutJson.data.message}</p>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-4 order-md-2 mb-4\">\r\n              <h4 class=\"d-flex justify-content-between align-items-center mb-3\">\r\n                <span class=\"text-muted\">{checkoutJson.data.titleCart}</span>\r\n                <span class=\"badge badge-secondary badge-pill\">3</span>\r\n              </h4>\r\n              <ul class=\"list-group mb-3\">\r\n                <li >\r\n                  {cartMap?.map (( product) =>\r\n                  (\r\n                    <li className='list-group-item d-flex justify-content-between lh-condensed'>\r\n                      <div style={{display:'flex', marginRight:'10px'}}>\r\n                        <img src={product.productImg} alt={product.productName} height='60px' width={'60px'} />\r\n                        <div style={{ marginLeft:'10px'}}>\r\n                          <h6 class=\"my-0\">{product.productName}</h6>\r\n                          <small class=\"text-muted\">{product.productDescription}</small>\r\n                          <small class=\"text-muted\">{checkoutJson.data.quantityProduct}: {product.productQuantity}</small>\r\n                        </div>\r\n                      </div>\r\n                      <span class=\"text-muted\">${currency(product.productPrice*product.productQuantity)}</span>\r\n                    </li>\r\n                  ))}\r\n                </li>\r\n                \r\n                <li class=\"list-group-item d-flex justify-content-between\">\r\n                  <span>{checkoutJson.data.totalBuy} (CLP)</span>\r\n                  <strong>${currency(precioTotal)}</strong>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div class=\"col-md-8 order-md-1\">\r\n              <h4 class=\"mb-3\">{checkoutJson.data.titleDataClient}</h4>\r\n              <form onSubmit={e=>handlePago(e)} >\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6 mb-3\">\r\n                    <label htmlFor=\"firstName\">{checkoutJson.data.nameCliente}</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"firstName\" placeholder=\"\" value={firstName} onChange={onChangeFirstName} required />\r\n                  </div>\r\n                  <div class=\"col-md-6 mb-3\">\r\n                    <label for=\"lastName\">{checkoutJson.data.lastNameCliente}</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"lastName\" placeholder=\"\" value={lastName} onChange={onChangeLastName} required />\r\n                  </div>\r\n                </div>\r\n                {/* <div class=\"mb-3\">\r\n                  <label for=\"username\">Username</label>\r\n                  <div class=\"input-group\">\r\n                    <div class=\"input-group-prepend\">\r\n                      <span class=\"input-group-text\">@</span>\r\n                    </div>\r\n                    <input type=\"text\" class=\"form-control\" id=\"username\" placeholder=\"Username\" required />\r\n                    <div class=\"invalid-feedback\">\r\n                      Your username is required.\r\n                    </div>\r\n                  </div>\r\n                </div> */}\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6 mb-3\">\r\n                    <label for=\"lastName\">{checkoutJson.data.phoneClient}</label>\r\n                    <div class=\"input-group\">\r\n                    <div class=\"input-group-prepend\">\r\n                      <span class=\"input-group-text\">+56</span>\r\n                    </div>\r\n                    <input type=\"phone\" class=\"form-control\" id=\"phone\" placeholder=\"9XXXXXXXX\" value={phone} onChange={onChangePhone} maxLength=\"9\" required />\r\n                  </div>\r\n                  </div>\r\n                  <div class=\"col-md-6 mb-3\">\r\n                    <label for=\"email\">{checkoutJson.data.emailClient} </label>\r\n                    <input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"you@example.com\" value={email} onChange={onChangeEmail} required/>\r\n                  </div>\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                  <label for=\"address\">{checkoutJson.data.addressClient}</label>\r\n                  <input type=\"text\" class=\"form-control\" id=\"address\" placeholder=\"1234 Main St\" value={address} onChange={onChangeAddress} required />\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                  <label for=\"address2\">{checkoutJson.data.addressComentaryClient}  <span class=\"text-muted\">(Opcional)</span></label>\r\n                  <input type=\"text\" class=\"form-control\" id=\"address2\" placeholder=\"Apartment or suite\" value={commentary} onChange={onChangeCommentary} />\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-5 mb-3\">\r\n                    <label for=\"country\">{checkoutJson.data.regionClient}</label>\r\n                    <select class=\"custom-select d-block w-100\" id=\"country\" value={regionUser} onChange={onChangeRegion} required>\r\n                      <option value=\"\"placeholder='Seleccione una Región' > Seleccione una Región</option>\r\n                      {regiones.regiones.map ( (region) =>(\r\n\r\n                      <option>{region.region}</option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"col-md-4 mb-3\">\r\n                    <label for=\"state\">{checkoutJson.data.comunaClient}</label>\r\n                    <select class=\"custom-select d-block w-100\" id=\"state\" value={comunaUser} onChange={onChangeComunaUser} placeholder='Seleccione una comuna' required>\r\n                       {comunaSelecion.map ( (comunas) =>(\r\n                        comunas.map((comuna) =><option>{comuna}</option> )\r\n                       ))}\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                {/* Opcion para agregar boton de Crear una cuenta\r\n\r\n                <hr class=\"mb-4\" />\r\n                <div class=\"custom-control custom-checkbox\" style={{margin:'5px'}}>\r\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"createAccount\" value={createAccount=== 'si'?'no':'si' } onChange={onChangeCrearCuenta}  />\r\n                  <label class=\"custom-control-label\" style={{marginLeft:'5px'}} for=\"same-address\">¿Crear Cuenta?</label>\r\n                </div>\r\n                {createAccount=== 'si' ?(\r\n\r\n                <div class=\"col-md-6 mb-3\">\r\n                    <label for=\"password\">Contraseña</label>\r\n                    <input type=\"password\" class=\"form-control\" id=\"firstName\" placeholder=\"\" value={password} onChange={onChangePassword} required />\r\n                </div>\r\n                ):null\r\n                } */}\r\n                <hr class=\"mb-4\" />\r\n                <h4 class=\"mb-3\">{checkoutJson.data.payment}</h4>\r\n                <div class=\"d-block my-3\">\r\n                { checkoutJson.data?.arrayPayment.filter(e=> e.active).map( (payment,i) => (\r\n                  <div class=\"custom-control custom-radio\" style={{paddingBottom:'20px'}}> \r\n                    <input id=\"credit\" name=\"paymentMethod\" type=\"radio\" class=\"custom-control-input\" value={payment.id} checked={paymentMethod === payment.id ?true :false} onChange={onChangePayMethod} required />\r\n                    <img src={payment.img}  alt={payment.name} style={{width:'120px', height:'40px', marginRight:'5px', marginLeft:'5px'}} />\r\n                    \r\n                  </div>\r\n                )) }\r\n                </div>\r\n                <hr class=\"mb-4\" />\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4 order-md-4 mb-4\">\r\n                      <Link to=\"/\" className=\"btn btn-secondary\">\r\n                        <i className=\"mdi mdi-arrow-left me-1\" />\r\n                        {checkoutJson.data.buttonReturn}{\" \"}\r\n                      </Link>\r\n                    </div>\r\n                    <div class=\"col-md-4 order-md-4 mb-4\">\r\n                      {\r\n                        buttonName === \"\"\r\n                        ? <div/>\r\n                        : <button className=\"btn btn-success\" type='submit'>\r\n                            <i className=\"mdi mdi-cart-arrow-right me-1\" />{\" \"}\r\n                            {buttonName}{\" \"}\r\n                          </button>\r\n                      }\r\n                    </div>\r\n                </div>\r\n                <hr class=\"mb-4\" />\r\n              </form>\r\n              \r\n            </div>\r\n            { isLoading && <Loading/>}\r\n          </div>\r\n\r\n        </div>\r\n        <Footer data={data.pages.filter(e => e.pageName === \"Footer\")[0]}/>\r\n      </div>\r\n  );\r\n};\r\n","C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\imgWithMessage.jsx",[],"C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\components\\loading.jsx",[],"C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\hook\\useCart.js",[],"C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\custom\\axios\\js\\axios.js",[],"C:\\Users\\ravan\\Documents\\GitHub\\simplera_template_landing\\src\\main.js",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":40,"column":10,"nodeType":"147","messageId":"148","endLine":40,"endColumn":25},{"ruleId":"145","severity":1,"message":"149","line":10,"column":8,"nodeType":"147","messageId":"148","endLine":10,"endColumn":16},{"ruleId":"145","severity":1,"message":"150","line":214,"column":10,"nodeType":"147","messageId":"148","endLine":214,"endColumn":15},{"ruleId":"145","severity":1,"message":"151","line":216,"column":9,"nodeType":"147","messageId":"148","endLine":216,"endColumn":21},{"ruleId":"145","severity":1,"message":"152","line":220,"column":9,"nodeType":"147","messageId":"148","endLine":220,"endColumn":16},{"ruleId":"153","severity":1,"message":"154","line":23,"column":6,"nodeType":"155","endLine":23,"endColumn":15,"suggestions":"156"},{"ruleId":"145","severity":1,"message":"157","line":21,"column":9,"nodeType":"147","messageId":"148","endLine":21,"endColumn":17},{"ruleId":"158","severity":1,"message":"159","line":33,"column":31,"nodeType":"160","messageId":"161","endLine":33,"endColumn":33},{"ruleId":"162","severity":1,"message":"163","line":34,"column":22,"nodeType":"164","messageId":"165","endLine":34,"endColumn":24},{"ruleId":"153","severity":1,"message":"166","line":38,"column":6,"nodeType":"155","endLine":38,"endColumn":8,"suggestions":"167"},{"ruleId":"153","severity":1,"message":"168","line":80,"column":6,"nodeType":"155","endLine":80,"endColumn":20,"suggestions":"169"},{"ruleId":"153","severity":1,"message":"170","line":49,"column":6,"nodeType":"155","endLine":49,"endColumn":15,"suggestions":"171"},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'landingPageData' is assigned a value but never used.","Identifier","unusedVar","'Carousel' is defined but never used.","'index' is assigned a value but never used.","'handleSelect' is assigned a value but never used.","'product' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cart?.length', 'cartLocalStorage', and 'setCart'. Either include them or remove the dependency array. Outer scope values like 'useCart' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["174"],"'navigate' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'idParams'. Either include it or remove the dependency array.",["175"],"React Hook useEffect has a missing dependency: 'cart'. Either include it or remove the dependency array.",["176"],"React Hook useEffect has missing dependencies: 'cartMap' and 'productAmmount'. Either include them or remove the dependency array. Outer scope values like 'useCart' aren't valid dependencies because mutating them doesn't re-render the component.",["177"],"no-global-assign","no-unsafe-negation",{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},"Update the dependencies array to be: [cart?.length, cartLocalStorage, setCart]",{"range":"186","text":"187"},"Update the dependencies array to be: [idParams]",{"range":"188","text":"189"},"Update the dependencies array to be: [cart, handleSubmit]",{"range":"190","text":"191"},"Update the dependencies array to be: [cartMap, productAmmount]",{"range":"192","text":"193"},[620,629],"[cart?.length, cartLocalStorage, setCart]",[1086,1088],"[idParams]",[2268,2282],"[cart, handleSubmit]",[1779,1788],"[cartMap, productAmmount]"]